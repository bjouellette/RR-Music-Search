{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyouellette/Desktop/KSDS/Extended/RR-Music-Search/src/components/AlbumView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AlbumView() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [albumData, setAlbumData] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const API_URL = `http://localhost:3000/song/${id}`;\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setAlbumData(resData.results);\n    };\n\n    fetchData();\n  }, [id]);\n\n  const navButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const justSongs = albumData.filter(entry => entry.wrapperType === 'track');\n  const renderSongs = justSongs.map((song, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navButtons(), renderSongs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AlbumView, \"MMRC9Sx9R4XQLBoZc3LGY3ZyCT0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = AlbumView;\nexport default AlbumView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumView\");","map":{"version":3,"sources":["/Users/brittanyouellette/Desktop/KSDS/Extended/RR-Music-Search/src/components/AlbumView.js"],"names":["useState","useEffect","useParams","useNavigate","AlbumView","id","albumData","setAlbumData","navigate","API_URL","fetchData","response","fetch","resData","json","results","navButtons","justSongs","filter","entry","wrapperType","renderSongs","map","song","i","trackName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAAEI,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,OAAO,GAAI,8BAA6BJ,EAAG,EAAjD;;AACA,UAAMK,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;AACA,YAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAP,MAAAA,YAAY,CAACM,OAAO,CAACE,OAAT,CAAZ;AACH,KAJD;;AAKAL,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACL,EAAD,CARM,CAAT;;AAUA,QAAMW,UAAU,GAAG,MAAM;AACrB,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAKR,QAAQ,CAAC,CAAC,CAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAKA,QAAQ,CAAC,GAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD;;AASA,QAAMS,SAAS,GAAGX,SAAS,CAACY,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,WAAN,KAAsB,OAAhD,CAAlB;AAEA,QAAMC,WAAW,GAAGJ,SAAS,CAACK,GAAV,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC3C,wBACI;AAAA,6BACI;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANmB,CAApB;AAQA,sBACI;AAAA,eACMR,UAAU,EADhB,EAEKK,WAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1CQjB,S;UACUF,S,EAEEC,W;;;KAHZC,S;AA6CT,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport {useNavigate} from 'react-router-dom'\n\nfunction AlbumView() {\n    const { id } = useParams()\n    const [ albumData, setAlbumData ] = useState([])\n    const navigate = useNavigate()\n\n   \n\n    useEffect(() => {\n        const API_URL = `http://localhost:3000/song/${id}`\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setAlbumData(resData.results)\n        }\n        fetchData()\n    }, [id])\n\n    const navButtons = () => {\n        return (\n            <div>\n                <button onClick={()=> navigate(-1)}>Back</button>\n                <button onClick={()=> navigate('/')}>Home</button>\n            </div>\n        )\n    }\n    \n    const justSongs = albumData.filter(entry => entry.wrapperType === 'track')\n\n    const renderSongs = justSongs.map((song, i) => {\n        return (\n            <div key={i}>\n                <p>{song.trackName}</p>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n             {navButtons()}\n            {renderSongs}\n        </div>\n    )\n}\n\n\nexport default AlbumView"]},"metadata":{},"sourceType":"module"}