{"ast":null,"code":"var _jsxFileName = \"/Users/brittanyouellette/Desktop/KSDS/Extended/RR-Music-Search/src/components/ArtistView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ArtistView() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [artistData, setArtistData, allData] = useState([]);\n  const navigate = useNavigate();\n\n  const navButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [navButtons(), allData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n  useEffect(() => {\n    const API_URL = 'http://localhost:4000/album/${id}';\n\n    const fetchData = async () => {\n      const response = await fetch(API_URL);\n      const resData = await response.json();\n      setArtistData(resData.results);\n    };\n\n    fetchData();\n  }, [id]);\n  const justAlbums = artistData.filter(entry => entry.collectionType === 'Album');\n  const renderAlbums = justAlbums.map((album, i) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/album/${album.collectionId}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: album.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"The id passed was: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Artist Data Goes Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), renderAlbums]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ArtistView, \"J3Sp9B0CL87e9SvO6am85So9Vj8=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ArtistView;\nexport default ArtistView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistView\");","map":{"version":3,"sources":["/Users/brittanyouellette/Desktop/KSDS/Extended/RR-Music-Search/src/components/ArtistView.js"],"names":["useState","useEffect","useParams","Link","useNavigate","ArtistView","id","artistData","setArtistData","allData","navigate","navButtons","API_URL","fetchData","response","fetch","resData","json","results","justAlbums","filter","entry","collectionType","renderAlbums","map","album","i","collectionId","collectionName"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAAEK,UAAF,EAAcC,aAAd,EAA6BC,OAA7B,IAAyCT,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAMU,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACrB,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,MAAKD,QAAQ,CAAC,CAAC,CAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAKA,QAAQ,CAAC,GAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD;;AASA,sBACI;AAAA,eACKC,UAAU,EADf,EAEKF,OAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,OAAO,GAAG,mCAAhB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,OAAD,CAA5B;AACA,YAAMI,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAT,MAAAA,aAAa,CAACQ,OAAO,CAACE,OAAT,CAAb;AACH,KAJD;;AAKAL,IAAAA,SAAS;AACZ,GARQ,EAQN,CAACP,EAAD,CARM,CAAT;AAUA,QAAMa,UAAU,GAAGZ,UAAU,CAACa,MAAX,CAAkBC,KAAK,IAAIA,KAAK,CAACC,cAAN,KAAyB,OAApD,CAAnB;AAEA,QAAMC,YAAY,GAAGJ,UAAU,CAACK,GAAX,CAAe,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC9C,wBACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASD,KAAK,CAACE,YAAa,EAAvC;AAAA,+BACI;AAAA,oBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARoB,CAArB;AAUA,sBACI;AAAA,4BACI;AAAA,wCAAwBtB,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKiB,YAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAlDQlB,U;UACUH,S,EAEEE,W;;;KAHZC,U;AAsDT,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport {useNavigate} from 'react-router-dom'\n\nfunction ArtistView() {\n    const { id } = useParams()\n    const [ artistData, setArtistData, allData ] = useState([])\n    const navigate = useNavigate()\n\n    const navButtons = () => {\n        return (\n            <div>\n                <button onClick={()=> navigate(-1)}>Back</button>\n                <button onClick={()=> navigate('/')}>Home</button>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {navButtons()}\n            {allData}\n        </div>\n    )\n\n    useEffect(() => {\n        const API_URL = 'http://localhost:4000/album/${id}'\n        const fetchData = async () => {\n            const response = await fetch(API_URL)\n            const resData = await response.json()\n            setArtistData(resData.results)\n        }\n        fetchData()\n    }, [id])\n\n    const justAlbums = artistData.filter(entry => entry.collectionType === 'Album')\n\n    const renderAlbums = justAlbums.map((album, i) => {\n        return (\n            <div>\n                <Link to={`/album/${album.collectionId}`}>\n                    <p>{album.collectionName}</p>\n                </Link>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <h2>The id passed was: {id}</h2>\n            <p>Artist Data Goes Here!</p>\n            {renderAlbums}\n        </div>\n    )\n}\n\n\n\nexport default ArtistView\n"]},"metadata":{},"sourceType":"module"}